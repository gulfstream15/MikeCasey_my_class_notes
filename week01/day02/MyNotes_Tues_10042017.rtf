{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red27\green31\blue34;\red34\green79\blue188;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18900\viewh11500\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
Tuesday 11th April (Week 01/Day02)\
\
Git/GitHub\
\
Create a directory\
touch files\
git init\
git add \'97all (to add new files)\
git status to see what has happened\
\
\
To create a new repository go to:\
\
https://github.com/\
\
and go to + at top of page and drop down to new repository\
\
put in a name and create repository button. Make sure SSH is selected.\
\
Copy and paste the two commands into the command window:\
\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
git remote add origin git@github.com:gulfstream15/studious-octo-garbanzo.git\
git push -u origin master\
\
then will be told status\
to go out of the master> need to remove the .git file\
use ls -a to see local file and then delete .gif\
\
\pard\tx560\tx1120\tx1677\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf1 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 rm -rf .git\cf2 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
git ignore\
\
In directory of interest:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf1 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0  touch .gitignore\
\

\f1\fs28 \cf2 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl320\partightenfactor0

\f0\fs24 \cf2 subl . in command window. Then in subl edit the .gitignore file with *.txt so that all files with this extension will be ignored. Make sure you use cmd/s to save in subl - so all *.txt will only be local and not on github. Can also be done for directories so in .gitignore file can have /empty_folder\
\
to delete a repository go to the settings page:\
\
\pard\pardeftab720\sl320\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://github.com/gulfstream15/studious-octo-garbanzo/settings"}}{\fldrslt \cf2 https://github.com/gulfstream15/studious-octo-garbanzo/settings}}\
\
then scroll down to danger zone and \'91delete this repository\'92\
\
\pard\tx25100\pardeftab720\sl320\partightenfactor0
\cf2 Ruby\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
The job of a language is to give ideas (instructions) to an interpreter on the PC to convert to binary code so that the computer understands it. ctrl/l or clear to clear screen\
rib - interactive ruby (quit or exit to come out of irb) ctrl/d to come out of any terminal window.\
in rib \'93hello\'94.class to see class used to print out \'93hello\'94 in this case =>String\
so here \'93hello\'94 is an object (or instance) of the String class.\
R E P L language\
E V R O\
A A I  O\
D L N P\
      T\
Class(/type): Template of blueprint (describes a specific shape (say))\
Object(/instance): and item created from a template/blueprint (a member of shape))\
stack overflow - this is where a computer tries to add 1 to the largest number available in that language \
(1.1).class => Float\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf1 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 my_string = "Will keep this string forever" 
\f0\fs24 \cf2 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 Assignment - think of the above as a ticket that gets into a cloakroom. You give in a \'91my_string\'92 and get back the string. \
Can assign any objects to variables\
number_of_chickens - this is called \'91snake\'92 case (for variables and methods)\
MikeCasey - this is camel case (used for classes)\
\
Conversions\
1 + \'932\'94 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf1 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 TypeError: String can't be coerced into Integer\
	from (irb):28:in `+'\
	from (irb):28\
	from /Users/user/.rbenv/versions/2.4.0/bin/irb:11:in `<main>'
\f0\fs24 \cf2 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
note the \'9228\'92 - this is the 28th command. To convert the string:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf1 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 1 + "2".to_i()
\f0\fs24 \cf2 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
then will get \'933\'94.\
\
Same for combining strings:\
\
\'932\'94 + 1  fails\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf1 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 "2" + 1.to_s()  
\f0\fs24 \cf2 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
to convert the integer to string i.e. \'9321\'94\
\
Because everything is an object can have my_string = \'93mike\'94 then my_string.length() is 4\
\
In Ruby you are allowed to omit the () for methods but it is good practice to use them at present. When doing it professionally most people will omit them. \
\
To look at methods available on a class e.g. String \
\pard\pardeftab720\sl320\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://ruby-doc.org/core-2.1.4/String.html"}}{\fldrslt \cf2 http://ruby-doc.org/core-2.1.4/String.html}}\
\
Conditional Logic \
4 == 2 + 2 is true\
4 == 3 + 3 is false\
\'93cat\'94 == \'93cat\'94 true\
\'93cat\'94 == \'93dog\'94 false it is checking the contents of the string\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf1 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 "1" == 1.to_s() 
\f0\fs24 \cf2 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
gets always brings back a string so a conversion is needed\
ruby what_animal.rb\
use \'93\'94 for strings as there is always a chance that using single quotes could cause an issue\
\
Case statement (tidier than if/elseif)\
\
score  = 6\
\
result = case score \
# NB here returns will not work here\
# use implicit return as below\
  when 10\
   "genius"\
  when 8..9\
   "merit"  \
  when 5..7\
   "pass"\
  else \
   "fail"    \
end\
\
puts result\
\
Guard - a condensed if\
\
\
score = 6\
\
result = "fail"\
result = "pass" if (score >=6)    # This is a guard\
puts result\
\
#ternary\
\
score = 6\
result = score > 5 ? "pass" : "fail"\
puts result\
\
Functions\
\
A reusable block of code with output and input. Name cannot begin with a number, upper case character or special character but they can occur within a name e.g greet! or greet? is legal but in Ruby a function with greet? means it will return a true of false e.g. 2.even? greet! means it will change the object it is operating on. \
\
Arguments are what is passed to a function in the call, the parameter is the name inside the function BUT they are interchangeable to ok to use either.\
\
simon.capitalise! - the name that is EXTERNAL to that function is changed outside so be careful using bangs just to use it once in a function and it will change FOREVER\
simon.capitalise - only changed locally\
\
Testing\
\
Unit testing - encourages to write better code. The idea is that you are not afraid to break the code with new code as a well defined test will capture any issues\
Gem is available in Ruby for testing:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf1 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 gem install minitest\
rbenv rehash\

\f0\fs24 \cf2 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 for a file called my_functions.rb then test file is called touch 
\f1\fs22 \cf1 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 my_functions_spec.rb
\f0\fs24 \cf2 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
Once the \
\
HomeWork testing\
\
Comment all except the test you are looking at (but keep the end for the class)\
\
Homework sheet - Link (same each time)\
\
https://docs.google.com/forms/d/e/1FAIpQLSem_wQjcM-_Jgxaa9R_7sBzVXxCaJ5jv1-UfwKpN4dx5g1x3Q/viewform?c=0&w=1}