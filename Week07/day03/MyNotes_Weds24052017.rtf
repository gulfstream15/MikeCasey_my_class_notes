{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Italic;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue254;\red15\green112\blue3;\red0\green0\blue109;
\red82\green0\blue103;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww13480\viewh9780\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Week 07 Day03\
\
Wojtek\
\
Developing Apps for Mobile Applications\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b0 \cf0 Designing for fingers rather than keyboards - nothing small than 11 points (not pixels).\
\
Don\'92t make people read - think of context. \
\
Make the application for standard platforms then extend later.\
\
8 main types of animations for mobile applications - website\
\
The three lines for selections on mobiles is called a \'91hamburger\'92 menu.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 Onboarding
\b0  \
\
Capturing information that is required in a structural fashion it introduces people to things\
in a very quick way. e.g 3 dots that allows users to navigate between pages. \
\
importance of notifications e.g. Gmail - what account you are in and when you send you can cancel\
via another button.\
\

\b Layered user experience.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b0 \cf0 \
e.g. the google calendar to access other pages (the + button) - the search is hidden and you have the choice\
to access or not i.e. it is layered not all information at once. \
\
Screen keyboards - need to have multiple pages to access special characters. \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 anticipatory design
\b0  \
\
Showing you were to go for a food while on a walk for example. \
\

\b Testing
\b0 \
\
Build on paper first - use user journeys - have everything planned. \
Then use UX pin to do a mock up of the app. \
\

\b Design Process\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b0 \cf0 \
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	1.	}Create a user journey\
{\listtext	2.	}Test on your user (your mate say) to go though user journey\
{\listtext	3.	}Paper prototype - test on your mate again\
{\listtext	4.	}UX pin/Oragami or other prototyping software and do a mock up of your app i.e. build a prototype \
{\listtext	5.	}Document all functionality (so that it can be passed to someone else - include all diagrams\
{\listtext	6.	}Build the application\
{\listtext	7.	}Test the application\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
mobile apps verses mobiles sites - difference is speed. \
\
List views with Custom Adapters\
\
Add a list view to an app\
Display data from an ArrayList a list using a custom adapter\
individual items in a listview\
\
				Custom Adaptor\
				\
				JAVA\
				\
\
\
 MODELS			ACTIVITY			LAYOUT\
\
\
\
\
JAVA				JAVA				XML\
\
model			controller			view\
\
\
app->layout->basic layout\
\
The image is read in via the /res/drawable directory. Images brought in via id NOT name.\
\
Class res = R.drawable.class;\
Field = field = res. getField(nameLogo);\
int drawableId =  \
\
\
activity_main.xml - default from android CardGame \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\i \cf0 <?
\f2\i0\b \cf2 xml version=\cf3 "1.0" \cf2 encoding=\cf3 "utf-8"
\f1\i\b0 \cf0 ?>\uc0\u8232 
\f3\i0 <
\f2\b \cf4 android.support.constraint.ConstraintLayout \cf2 xmlns:\cf5 android\cf2 =\cf3 "http://schemas.android.com/apk/res/android"\uc0\u8232     \cf2 xmlns:\cf5 app\cf2 =\cf3 "http://schemas.android.com/apk/res-auto"\uc0\u8232     \cf2 xmlns:\cf5 tools\cf2 =\cf3 "http://schemas.android.com/tools"\uc0\u8232     \cf5 android\cf2 :layout_width=\cf3 "match_parent"\uc0\u8232     \cf5 android\cf2 :layout_height=\cf3 "match_parent"\uc0\u8232     \cf5 tools\cf2 :context=\cf3 "com.codeclan.example.cardgame.MainActivity"
\f3\b0 \cf0 >\uc0\u8232 \u8232     <
\f2\b \cf4 TextView\uc0\u8232         \cf5 android\cf2 :layout_width=\cf3 "wrap_content"\uc0\u8232         \cf5 android\cf2 :layout_height=\cf3 "wrap_content"\uc0\u8232         \cf5 android\cf2 :text=\cf3 "Hello World!"\uc0\u8232         \cf5 app\cf2 :layout_constraintBottom_toBottomOf=\cf3 "parent"\uc0\u8232         \cf5 app\cf2 :layout_constraintLeft_toLeftOf=\cf3 "parent"\uc0\u8232         \cf5 app\cf2 :layout_constraintRight_toRightOf=\cf3 "parent"\uc0\u8232         \cf5 app\cf2 :layout_constraintTop_toTopOf=\cf3 "parent" 
\f3\b0 \cf0 />\uc0\u8232 \u8232 </
\f2\b \cf4 android.support.constraint.ConstraintLayout
\f3\b0 \cf0 >\
}